    /* need to handle nulls properly
    string stringCell1 = "";
    string stringCell2 = "";

    if (!isEmptyCell(Wks1.Cells[intSourceRow, intColCount])) {
        stringCell1 = Wks1.Cells[intSourceRow, intColCount].Value.ToString();
    }

    // need to handle nulls properly
    if (!isEmptyCell(Wks2.Cells[intSourceRow, intColCount])) {
        stringCell2 = Wks2.Cells[intTargetRow, intColCount].Value.ToString();
    }


    if (stringCell1 == stringCell2) {
        intColScore++;
    }



btnSettings
btnReadFolders
btnCompareSheets
btnZap
splitButtonDeleteLines
btnDeleteBlankLinesA
btnDeleteBlankLinesB
btnDeleteBlankLinesC
btnDealWithSingleDuplicates
btnDealWithManyDuplicates
btnLoadADGroupIntoSpreadsheet
btnLoadADGroupIntoSpreadsheetActiveCell
btnReadUsersGroupMembership
btnReadUsers
btnWriteTimeSheet
btnPingServers


ToolbarOfFunctions.frmSettings

            FolderBrowserDialogEx cfbd = new FolderBrowserDialogEx();
            cfbd.Title = txtCaption.Text;
            cfbd.SelectedPath = txtInitialFolder.Text;
            cfbd.ShowEditbox = chkEditbox.Checked;
            cfbd.ShowNewFolderButton = chkShowNewFolderBtn.Checked;
            cfbd.RootFolder = (Environment.SpecialFolder)comboRootFolder.SelectedValue;
            cfbd.StartPosition = FormStartPosition.CenterScreen;

            DialogResult dr = cfbd.ShowDialog(this);
            txtRtnCode.Text = dr.ToString();
            txtRtnFolder.Text = "";


            if (dr == DialogResult.OK)
            {
                txtRtnFolder.Text = cfbd.SelectedPath;
            }


namespace ToolbarOfFunctions
{
    public partial class ExcelRibbon


ToolbarOfFunctions.ExcelRibbon

