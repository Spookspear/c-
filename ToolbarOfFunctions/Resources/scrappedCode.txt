strCompareOrColour = (string)frmSettings.cmboHighLightOrDelete.SelectedValue;


try
{

}
catch (System.Exception excpt)
{
    Console.WriteLine(excpt.Message);
}



Information info = new Information
HighLightOrDelete = cmboHighLightOrDelete.Text,

// --- get data of of an object / class

                Information info = (Information)xs.Deserialize(read);

                chkLargeButtons.Checked = info.LargeButtons;
HighLightOrDelete = cmboHighLightOrDelete.Text,


            try
            {
                Information info = new Information
                {
                    LargeButtons = chkLargeButtons.Checked,
                    HideText = chkHideText.Checked,



//-------------------

    /* need to handle nulls properly
    string stringCell1 = "";
    string stringCell2 = "";

    if (!isEmptyCell(Wks1.Cells[intSourceRow, intColCount])) {
        stringCell1 = Wks1.Cells[intSourceRow, intColCount].Value.ToString();
    }

    // need to handle nulls properly
    if (!isEmptyCell(Wks2.Cells[intSourceRow, intColCount])) {
        stringCell2 = Wks2.Cells[intTargetRow, intColCount].Value.ToString();
    }


    if (stringCell1 == stringCell2) {
        intColScore++;
    }



btnSettings
btnReadFolders
btnCompareSheets
btnZap
splitButtonDeleteLines
btnDeleteBlankLinesA
btnDeleteBlankLinesB
btnDeleteBlankLinesC
btnDealWithSingleDuplicates
btnDealWithManyDuplicates
btnLoadADGroupIntoSpreadsheet
btnLoadADGroupIntoSpreadsheetActiveCell
btnReadUsersGroupMembership
btnReadUsers
btnWriteTimeSheet
btnPingServers


ToolbarOfFunctions.frmSettings

            FolderBrowserDialogEx cfbd = new FolderBrowserDialogEx();
            cfbd.Title = txtCaption.Text;
            cfbd.SelectedPath = txtInitialFolder.Text;
            cfbd.ShowEditbox = chkEditbox.Checked;
            cfbd.ShowNewFolderButton = chkShowNewFolderBtn.Checked;
            cfbd.RootFolder = (Environment.SpecialFolder)comboRootFolder.SelectedValue;
            cfbd.StartPosition = FormStartPosition.CenterScreen;

            DialogResult dr = cfbd.ShowDialog(this);
            txtRtnCode.Text = dr.ToString();
            txtRtnFolder.Text = "";


            if (dr == DialogResult.OK)
            {
                txtRtnFolder.Text = cfbd.SelectedPath;
            }


namespace ToolbarOfFunctions
{
    public partial class ExcelRibbon


ToolbarOfFunctions.ExcelRibbon



        private string data4;
        private string data5;
        private string data6;
        private string data7;
        private string data8;
        private string data9;
        private string data10;
        private string data11;
        private string data12;
        private string data13;
        private string data14;
        private string data15;
        private string data16;
        private string data17;
        private string data18;



        public string Data2 {
            get { return data2; }
            set { data2 = value; } }

        public string Data3 {
            get { return data3; }
            set { data3 = value; } }

        public string Data4 {
            get { return data4; }
            set { data4 = value; } }

        public string Data5 {
            get { return data5; }
            set { data5 = value; } }

        public string Data6 {
            get { return data6; }
            set { data6 = value; } }

        public string Data7 {
            get { return data7; }
            set { data7 = value; } }

        public string Data8 {
            get { return data8; }
            set { data8 = value; } }

        public string Data9 {
            get { return data9; }
            set { data9 = value; } }

        public string Data10 {
            get { return data10; }
            set { data10 = value; } }

        public string Data11 {
            get { return data11; }
            set { data11 = value; } }

        public string Data12 {
            get { return data12; }
            set { data12 = value; } }

        public string Data13 {
            get { return data13; }
            set { data13 = value; } }

        public string Data14
        {
            get { return data14; }
            set { data14 = value; }
        }
        public string Data15 {
            get { return data15; }
            set { data15 = value; }
        }
        public string Data16
        {
            get { return data16; }
            set { data16 = value; }
        }
        public string Data17
        {
            get { return data17; }
            set { data17 = value; }
        }
        public string Data18
        {
            get { return data18; }
            set { data18 = value; }
        }



cmboDifferences
cmboHighLightOrDelete
cmboDelModeAorBorC




 chkLargeButtons.Checked  =                LargeButtons
 chkHideText.Checked  =                    HideText
 cmboDifferences.Text  =                   Differences

 cmboHighLightOrDelete.Text  =             HighLightOrDelete
 chkDisplayTimeTaken.Checked  =            DisplayTimeTaken
 chkProduceMessageBox.Checked  =           ProduceMessageBox
 cmboDelModeAorBorC.Text  =                DelModeAorBorC
 numHighlightRowsOver.Value  =             HighlightRowsOver
                                       // ---------

 numNoOfColumnsToCheck.Value  =            NoOfColumnsToCheck
 numComparingStartRow.Value  =             ComparingStartRow
 numDupliateColumnToCheck.Value  =         DupliateColumnToCheck
 txtColourFound.Text  =                    ColourFound
 txtColourNotFound.Text  =                 ColourNotFound

                                       // ---------
 numTimeSheetRowNo.Value  =                TimeSheetRowNo
 chkTimeSheetGetRowNo.Checked  =           TimeSheetGetRowNo

                                       // ---------
 numPingSheetRowNo.Value  =                PingSheetRowNo
 numColPingRead.Value  =                   ColPingRead
 numColPingWrite.Value  =                ColPingWrite