bool booltimeTaken = myData.DisplayTimeTaken;

if (booltimeTaken)
{
strMessage = strMessage + LF + " and display the time taken";
}

Stopwatch sw = new Stopwatch();
sw.Start();
... stuff
sw.Stop();

if (booltimeTaken)
{
	strMessage = strMessage + "that took " + sw.Elapsed.Milliseconds.ToString() + " Milliseconds";

}


 strMessage = "Duplicate Rows Check on column: " + strColumnName + LF +
                                 " Worksheet name: " + Wks.Name + 
                                            " and: " + strColourOrDelete + " ones which are the same";

                    if (booltimeTaken)
                    {
                        strMessage = strMessage + LF + " and display the time taken";
                    }

                    strMessage = strMessage + "?";
					
					

strMessage = "Compare: " + Wks1.Name + LF +
                                    " against: " + Wks2.Name + LF +
                                        " and: " + strCompareOrColour + " ones which are the same" + LF +
                                       " (starting at row:" + intStartRow.ToString() + ")";

                        if (booltimeTaken)
                        {
                            strMessage = strMessage + LF + " and display the time taken";
                        }					


        internal void compareSheets(Excel.Application xls)
        {

            Excel.Workbook Wkb = xls.ActiveWorkbook;
			
					            CommonExcelClasses.ButtonUpdateLabel(btnCompareSheets, "Compare: (" + myData.CompareOrColour + ")");
            CommonExcelClasses.ButtonUpdateLabel(btnDealWithSingleDuplicates, "Duplicates (Cols: Single): (" + myData.ColourOrDelete + ")");
			
            CommonExcelClasses.ButtonUpdateLabel(btnCompareSheets, "Compare: (" + myData.CompareOrColour + ")");
            CommonExcelClasses.ButtonUpdateLabel(btnDealWithSingleDuplicates, "Duplicates (Cols: Single): (" + myData.ColourOrDelete + ")");			